@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class Address {
  + Address(String, String, String): 
  + streetProperty(): StringProperty
  + postalCodeProperty(): StringProperty
  + toString(): String
  + cityProperty(): StringProperty
   city: String
   street: String
   postalCode: String
}
class AppModel {
  - AppModel(): 
   viewFactory: ViewFactory
   instance: AppModel
}
class Customer {
  + Customer(String, String, Address, String, String, String, LocalDate, Mutual, Doctor): 
  + Customer(): 
  + referringDoctorProperty(): ObjectProperty<Doctor>
  + birthDateProperty(): ObjectProperty<LocalDate>
  + socialSecurityNumberProperty(): StringProperty
  + toString(): String
  + mutualProperty(): ObjectProperty<Mutual>
   referringDoctor: Doctor
   mutual: Mutual
   socialSecurityNumber: String
   birthDate: LocalDate
}
enum Department << enumeration >> {
  - Department(String): 
  + values(): Department[]
  + fromCode(String): Department?
  + toString(): String
  + valueOf(String): Department
   code: String
   formattedName: String
}
class Doctor {
  + Doctor(String, String, Address, String, String, String): 
  + registrationNumberProperty(): StringProperty
  + toString(): String
   registrationNumber: String
}
class Medication {
  + Medication(String, MedicationCategory, LocalDate, int, double): 
  + Medication(): 
  + priceProperty(): DoubleProperty
  + launchDateProperty(): ObjectProperty<LocalDate>
  + nameProperty(): StringProperty
  + categoryProperty(): ObjectProperty<MedicationCategory>
  + toString(): String
  + quantityProperty(): IntegerProperty
   name: String
   launchDate: LocalDate
   category: MedicationCategory
   quantity: int
   price: double
}
enum MedicationCategory << enumeration >> {
  - MedicationCategory(String): 
  + values(): MedicationCategory[]
  + valueOf(String): MedicationCategory
  + toString(): String
  + fromDisplayName(String): MedicationCategory?
   displayName: String
}
class Mutual {
  + Mutual(String, Address, Department, String, String, double): 
  + departmentProperty(): ObjectProperty<Department>
  + reimbursementRateProperty(): DoubleProperty
  + phoneNumberProperty(): StringProperty
  + nameProperty(): StringProperty
  + emailProperty(): StringProperty
  + toString(): String
   name: String
   reimbursementRate: double
   department: Department
   address: Address
   email: String
   phoneNumber: String
}
class Person {
  + Person(String, String, Address, String, String): 
  + phoneNumberProperty(): StringProperty
  + lastNameProperty(): StringProperty
  + firstNameProperty(): StringProperty
  + emailProperty(): StringProperty
   firstName: String
   lastName: String
   address: Address
   email: String
   phoneNumber: String
}
class Prescription {
  + Prescription(LocalDate, Doctor, Customer, List<Medication>, Specialist): 
  + Prescription(LocalDate, Doctor, Customer, List<Medication>): 
  + doctorProperty(): ObjectProperty<Doctor>
  + medicationsProperty(): ListProperty<Medication>
  + prescriptionDateProperty(): ObjectProperty<LocalDate>
  + patientProperty(): ObjectProperty<Customer>
  + toString(): String
  + specialistProperty(): ObjectProperty<Specialist>
   specialist: Specialist
   medications: List<Medication>
   prescriptionDate: LocalDate
   patient: Customer
   doctor: Doctor
}
class Purchase {
  + Purchase(): 
  + Purchase(Customer, LocalDate, Map<Medication, Integer>, Doctor, LocalDate): 
  + prescriptionDateProperty(): ObjectProperty<LocalDate>
  + calculateTotalAmount(): double
  + medicationBasketProperty(): MapProperty<Medication, Integer>
  + customerProperty(): ObjectProperty<Customer>
  + totalAmountProperty(): DoubleProperty
  + addMedication(Medication, int): void
  + purchaseDateProperty(): ObjectProperty<LocalDate>
  + prescribingDoctorProperty(): ObjectProperty<Doctor>
  + toString(): String
   medicationBasket: Map<Medication, Integer>
   totalAmount: double
   customer: Customer
   prescriptionDate: LocalDate
   purchaseDate: LocalDate
   prescribingDoctor: Doctor
}
enum PurchaseType << enumeration >> {
  - PurchaseType(String): 
  + toString(): String
  + values(): PurchaseType[]
  + valueOf(String): PurchaseType
   displayName: String
}
class Specialist {
  + Specialist(String, String, Address, String, String, String, Specialty): 
  + specialtyProperty(): ObjectProperty<Specialty>
  + toString(): String
   specialty: Specialty
}
enum Specialty << enumeration >> {
  - Specialty(String): 
  + fromDisplayName(String): Specialty?
  + values(): Specialty[]
  + toString(): String
  + valueOf(String): Specialty
   displayName: String
}

Customer            -[#595959,dashed]->  Address            : "«create»"
Customer            -[#000082,plain]-^  Person             
Doctor              -[#000082,plain]-^  Person             
Mutual             "1" *-[#595959,plain]-> "address\n1" Address            
Person             "1" *-[#595959,plain]-> "address\n1" Address            
Prescription       "1" *-[#595959,plain]-> "medications\n*" Medication         
Purchase           "1" *-[#595959,plain]-> "medicationBasket\n*" Medication         
Specialist          -[#000082,plain]-^  Doctor             
@enduml
